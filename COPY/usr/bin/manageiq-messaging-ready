#!/usr/bin/env ruby

require "yaml"
require "sd_notify"
require "manageiq-messaging"
require "manageiq-password"

def service_ready?(host, port)
  `ncat #{host} #{port} </dev/null 2>/dev/null`
  $?.success?
end

def messaging_ready?(msg_yaml, env = "production")
  host = msg_yaml[env].fetch("host", "127.0.0.1")
  port = msg_yaml[env].fetch("port", 9092)

  if service_ready?(host, port)
    puts "#{host} #{port} - accepting connections"
    true
  else
    puts "#{host} #{port} - not accepting connections"
    false
  end
end

def manageiq_msging_ready?(msg_yaml, env = "production")
  options = msg_yaml[env].symbolize_keys
  options[:password] = ManageIQ::Password.try_decrypt(options[:password]) if options[:password]
  options[:client_ref] = "manageiq-messaging-ready"

  # Test broker connection by listing topics
  broker = ManageIQ::Messaging::Client.open(options)
  broker.topics
rescue => err
  puts err
  puts "Kafka is not ready yet"
  false
else
  puts "Kafka is up and running"
  true
ensure
  broker&.close
end

def initialize_topics(msg_yaml, env = "production")
  require "shellwords"

  host = msg_yaml[env].fetch("host", "127.0.0.1")
  port = msg_yaml[env].fetch("port", 9092)
  bootstrap_server = Shellwords.shellescape("#{host}:#{port}")

  `/opt/kafka/bin/kafka-topics.sh --create --topic manageiq.ems --bootstrap-server #{bootstrap_server} --command-config /opt/kafka/config/client.properties`
  `/opt/kafka/bin/kafka-topics.sh --create --topic manageiq.ems-events --bootstrap-server #{bootstrap_server} --command-config /opt/kafka/config/client.properties`
  `/opt/kafka/bin/kafka-topics.sh --create --topic manageiq.ems-inventory --bootstrap-server #{bootstrap_server} --command-config /opt/kafka/config/client.properties`
  `/opt/kafka/bin/kafka-topics.sh --create --topic manageiq.metrics --bootstrap-server #{bootstrap_server} --command-config /opt/kafka/config/client.properties`

rescue => err
  puts err
  puts "Topic initialization unsuccessful"
else
  puts "Topics initialized successfully"
end

loop do
  messaging_yaml = YAML.load_file("/var/www/miq/vmdb/config/messaging.yml")

  if messaging_ready?(messaging_yaml) && manageiq_msging_ready?(messaging_yaml)
    initialize_topics(messaging_yaml)
    break
  end

  sleep(10)
end

SdNotify.ready
